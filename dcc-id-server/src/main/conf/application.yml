#
# DCC Metadata Server - Configuration
#

###################################################################################################
# Common
###################################################################################################

spring:
  profiles.active: production

# Server
server:
  port: 8443
  tomcat:
    max-threads: 200
  ssl:
    key-store: src/main/conf/keystore.p12
    key-store-type: PKCS12
    key-store-password: ***REMOVED***

# Caching
cache:
  dir: /tmp/dcc-id

# Management endpoints
management:
  context_path: /admin
  address: 127.0.0.1
  port: 8444
  
---

###################################################################################################
# Production
###################################################################################################

# Spring
spring:
  profiles: production
  profiles.include: secure
  
# JDBC
spring.datasource:
  url: jdbc:postgresql://***REMOVED***/dcc_identifier
  username: <username>
  password: <password>
  driverClassName: org.postgresql.Driver

---

###################################################################################################
# Development
###################################################################################################

# Spring
spring:
  profiles: development

# JDBC
spring.datasource:
  url: jdbc:h2:mem:dcc_identifier;MODE=PostgreSQL
  # To get more insight, enable tracing:
  #  jdbc:h2:mem:dcc_identifier;TRACE_LEVEL_SYSTEM_OUT=4...

  username: username
  password: password
  schema: classpath:/sql/schema.sql
  driveClassName: org.h2.Driver

  # Note that the following database setting *must* be set this way in order to ensure that 
  # a second connection is never created. This is because the act of creating a 
  # connection will source the "runscript" identified above. This effectively
  # will empty the database. This was originally observed when the idle validation
  # query was doing just this. 
  validation-query: "/* Invalid query to fail if run! */ I SHOULD NEVER RUN!"
  minIdle: 1
  maxIdle: 1

---

###################################################################################################
# Secure
###################################################################################################

# Spring
spring:
  profiles: secure
   
# OAuth authentication server
auth:
  server:
    url: https://***REMOVED***/oauth/check_token
    clientId: <id>
    clientsecret: <password>
    
  # Connection retries in case of connection failure 
  connection:
  
    # Max number of retries
    maxRetries: 5
    
    # Initial timeout before the first retry. In milliseconds.
    initialBackoff: 15000
    
    # Multiplier that defines value of consequent timeouts before the next retry. 
    # E.g. TIMEOUT(n) = TIMEOUT(n-1) * MULTIPLIER
    multiplier: 2.0
